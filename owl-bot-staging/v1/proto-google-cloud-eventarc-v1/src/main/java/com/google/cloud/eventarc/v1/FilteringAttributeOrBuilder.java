// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/eventarc/v1/discovery.proto

package com.google.cloud.eventarc.v1;

public interface FilteringAttributeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.eventarc.v1.FilteringAttribute)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Output only. Attribute used for filtering the event type.
   * </pre>
   *
   * <code>string attribute = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The attribute.
   */
  java.lang.String getAttribute();
  /**
   * <pre>
   * Output only. Attribute used for filtering the event type.
   * </pre>
   *
   * <code>string attribute = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for attribute.
   */
  com.google.protobuf.ByteString
      getAttributeBytes();

  /**
   * <pre>
   * Output only. Description of the purpose of the attribute.
   * </pre>
   *
   * <code>string description = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * Output only. Description of the purpose of the attribute.
   * </pre>
   *
   * <code>string description = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * Output only. If true, the triggers for this provider should always specify a filter
   * on these attributes. Trigger creation will fail otherwise.
   * </pre>
   *
   * <code>bool required = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The required.
   */
  boolean getRequired();

  /**
   * <pre>
   * Output only. If true, the attribute accepts matching expressions in the Eventarc
   * PathPattern format.
   * </pre>
   *
   * <code>bool path_pattern_supported = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
   * @return The pathPatternSupported.
   */
  boolean getPathPatternSupported();
}
